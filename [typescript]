## 타입스크립트 기본타입 (12개)
  - Boolean
  - Number
  - String
  - Object
  - Array
  - Tuple 
  - Enum
  - Any
  - Void
  - Null
  - Undefined
  - Never

## typeAnnotation
: 이용하여 자바스크립트 코드에 타입을 정의하는 방식
  
  ### Array
  타입이 배열인 경우 간단하게 아래와 같이 선언
  let arr: number[] = [1,2,3];

  또는 아래와 같이 제네릭을 사용할 수 있다.
  let arr: Array<number> = [1,2,3];
  
  ### Tuple
  튜플은 배열의 길이가 고정되고 각 요소의 타입이 지정되어 있는 배열 형식을 의미
  let arr: [string, number] = ['hi', 10];
  
  ### Enum 
  특정 상수들의 집합
  
  enum Avengers { Capt, IronMan, Thor }
  let hero: Avengers = Avengers.Capt;
  
  이넘은 인덱스 번호로도 접근할 수 있습니다.
  enum Avengers { Capt, IronMan, Thor }
  let hero: Avengers = Avengers[0];
  
  만약 원한다면 이넘의 인덱스를 사용자 편의로 변경하여 사용할 수도 있습니다.
  enum Avengers { Capt = 2, IronMan, Thor }
  let hero: Avengers = Avengers[2]; // Capt
  let hero: Avengers = Avengers[4]; // Thor
  
  ### Void 
  undefined와 null만 할당하고, 함수에는 반환 값을 설정할 수 없는 타입
  let unuseful: void = undefined;
  function notuse(): void {
    console.log('sth');
  }
  

## 인터페이스 
인터페이스는 상호 간에 정의한 약속 혹은 규칙을 의미한다. 타입스크립트에서의 인터페이스는 보통 다음과 같은 범주에 대해 약속을 정의할 수 있다
- 객체의 스펙(속성과 속성의 타입)
- 함수의 파라미터
- 함수의 스펙(파라미터, 반환 타입 등)
- 배열과 객체를 접근하는 방식
- 클래스


## tsconfig.json 파일



  
  
  
  
